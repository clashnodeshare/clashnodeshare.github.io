<!DOCTYPE html>
<html xml:lang="zh-CN" lang="zh-CN">

<head>
        <link rel="canonical" href="https://clashnodeshare.github.io/news/article-56153.htm" />
    <meta charset="utf-8">
    <title>Git基础Git对象的总结</title>
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">
    <link rel="icon" href="/assets/website/img/clashnodeshare/favicon.ico" type="image/x-icon"/>
        <meta name="description" content="目录  1、Git操作最基本的流程 2、工作目录中文件的状态 3、Git效率说明    提示：前面三篇文章已经分别的对blob对象、tree对象、commit对象进行了详细的说明，这篇文章我们总结一下" />
    
    <meta name="author" content="ClashNodeShare官方节点分享站">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://clashnodeshare.github.io/news/article-56153.htm" />
    <meta property="og:site_name" content="ClashNodeShare官方节点分享站" />
    <meta property="og:title" content="Git基础Git对象的总结" />
    <meta property="og:image" content="https://clashnodeshare.github.io/uploads/20240302/c9db5a4fee58fcfe4524296ba751035a.webp" />
        <meta property="og:release_date" content="2025-02-14T10:00:15" />
    <meta property="og:updated_time" content="2025-02-14T10:00:15" />
        <meta property="og:description" content="目录  1、Git操作最基本的流程 2、工作目录中文件的状态 3、Git效率说明    提示：前面三篇文章已经分别的对blob对象、tree对象、commit对象进行了详细的说明，这篇文章我们总结一下" />
        
    <!-- css -->
    <link href="/assets/website/css/clashnodeshare/bootstrap.min.css" rel="stylesheet" />
    <link href="/assets/website/css/clashnodeshare/fancybox/jquery.fancybox.css" rel="stylesheet">
    <link href="/assets/website/css/clashnodeshare/flexslider.css" rel="stylesheet" />
    <link href="/assets/website/css/clashnodeshare/style.css" rel="stylesheet" />

    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="Git基础Git对象的总结">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-JFE91ZBBP3"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-JFE91ZBBP3');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
    <div id="wrapper">
                <!-- start header -->
        <header>
            <div class="navbar navbar-default navbar-static-top">
                <div class="container">
                    <div class="navbar-header">
                        <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
                            <span class="icon-bar"></span>
                            <span class="icon-bar"></span>
                            <span class="icon-bar"></span>
                        </button>
                        <a class="navbar-brand" href="/"><img src="/assets/website/img/clashnodeshare/logo.png" alt="Clash Node Share logo" /></a>
                    </div>
                    <div class="navbar-collapse collapse ">
                        <ul class="nav navbar-nav">
                                                        <li><a href="/">首页</a></li>
                                                        <li><a href="/free-nodes/">免费节点</a></li>
                                                        <li><a href="/paid-subscribe/">推荐机场</a></li>
                                                        <li><a href="/client.htm">客户端</a></li>
                                                        <li><a href="/news/">新闻资讯</a></li>
                                                    </ul>
                    </div>
                </div>
            </div>
        </header>
        <!-- end header -->
        <section id="inner-headline">
            <div class="container">
                <div class="row">
                    <div class="col-lg-12">
                        <h1 class="pageTitle" style="word-break: break-all;">Git基础Git对象的总结</h1>
                    </div>
                </div>
            </div>
        </section>
        <section id="content">
            <div class="container">
                <div class="row">
                    <ol class="breadcrumb">
                        <li><a href="/">首页</a></li>
                        <li><a href="/news/">新闻资讯</a></li>
                        <li class="active"> 正文 </li>
                    </ol>
                    <div class="row">
                        <div class="col-md-9">
                            <div class="about-logo">
                                                <input type="hidden" id="share-website-info" data-name="" data-url="">
                  				  				  				<div class="toc"> <div class="toc-container-header">目录</div> <ul> <li><a href="#1git%E6%93%8D%E4%BD%9C%E6%9C%80%E5%9F%BA%E6%9C%AC%E7%9A%84%E6%B5%81%E7%A8%8B" rel="nofollow">1、Git操作最基本的流程</a></li> <li><a href="#2%E5%B7%A5%E4%BD%9C%E7%9B%AE%E5%BD%95%E4%B8%AD%E6%96%87%E4%BB%B6%E7%9A%84%E7%8A%B6%E6%80%81" rel="nofollow">2、工作目录中文件的状态</a></li> <li><a href="#3git%E6%95%88%E7%8E%87%E8%AF%B4%E6%98%8E" rel="nofollow">3、Git效率说明</a></li> </ul> </div> <blockquote> <p>提示：前面三篇文章已经分别的对<code>blob</code>对象、<code>tree</code>对象、<code>commit</code>对象进行了详细的说明，这篇文章我们总结一下，Git对象在基础操作流程中的生成的时机。</p> </blockquote> <h2 id="1git操作最基本的流程">1、Git操作最基本的流程</h2> <p><strong>1）创建工作目录对工作目录进行修改</strong>。</p> <p><strong>2）执行<code>git add ./</code>命令添加文件到暂存区。</strong></p> <p>相当于执行了如下两个底层命令：</p> <ul> <li><code>git hash-object -w文件名</code>（修改了多少个工作目录中的文件此命令就要被执行多少次）</li> <li><code>git update-index</code></li> </ul> <p><strong>说明：<code>git add</code>命令做了什么事情？</strong></p> <p>表面上是将工作目录中的文件添加到暂存区中，其实真正的流程是：</p> <ul> <li>先将工作目录中的文件，生成<code>blob</code>对象存储到本地版本库中，<br /> 一个文件生成一个<code>blob</code>对象，一个文件执行一次<code>git hash-object -w 文件路径</code>命令。</li> <li>再通过<code>git update-index</code>命令，把本地版本库中<code>blob</code>对象，生成文件的索引（快照），存储到暂存区中。</li> </ul> <blockquote> <p>所以说Git是绝对安全的，只要你对文件做过的修改，哪怕没有提交到本地版本库，只是提交到暂存区，Git也会帮你记录下来。</p> </blockquote> <p><strong>3）执行<code>git commit -m "注释内容"</code>命令，把暂存区的快照提交到本地版本库。</strong></p> <p>相当于执行了如下两个底层命令：</p> <ul> <li><code>git write-tree</code>：生成<code>tree</code>对象。</li> <li><code>git commit-tree</code>：生成<code>commit</code>对象。</li> </ul> <p><strong>说明：<code>git commit</code>命令做了什么事情？</strong></p> <p>表面上是将暂存区的文件索引提交到了本地版本库中，其实真正的流程是：</p> <ul> <li>先通过<code>git write-tree</code>命令，把暂存区中的索引信息，生成一个<code>tree</code>对象存储到本地版本库中。</li> <li>然后通过<code>git commit-tree</code>命令，把上面生成的树对象进行封存，生成一个<code>commit</code>对象，存储到本地版本库中。</li> </ul> <p><strong>重点提示：一个<code>commit</code>对象肯定会对应一个<code>tree</code>对象（单方向1对1的关系），一个<code>commit</code>对象是不会对应两个<code>tree</code>对象的。（如上说明）</strong></p> <h2 id="2工作目录中文件的状态">2、工作目录中文件的状态</h2> <p>工作目录下面的所有文件都不外乎这两种状态：<strong>已跟踪</strong>状态或<strong>未跟踪</strong>状态。</p> <p><strong>已跟踪</strong>的文件是指本来就被纳入版本控制管理的文件，在之前的快照中有它们的记录，工作一段时间后，它们的状态会分为<strong>已提交</strong>状态，<strong>已修改</strong>状态或者<strong>已暂存</strong>状态，这三种。</p> <p>然后所有其他文件都属于未跟踪文件。它们既没有上次更新时的快照，也不在当前的暂存区域。</p> <p>使用Git时的文件状态变化周期如下图所示：</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/9d160e9d0009304670f639843349a050.jpg" alt="Git基础Git对象的总结"></p> <blockquote> <p>提示：初次克隆某个仓库到本地时，工作目录中的所有文件都属于已跟踪文件，且状态为已提交；在编辑过某些文件之后，Git将这些文件标为已修改。我们逐步把这些修改过的文件放到暂存区域，直到最后一次性提交所有这些暂存起来的文件。</p> </blockquote> <h2 id="3git效率说明">3、Git效率说明</h2> <p>我们经历了一次完整的Git提交过程，现在我们来思考一下Git提供的这三种对象带来的高效率：</p> <ul> <li>首先Git会对所有的文件内容进行压缩，这使得即使仓库中存储了非常多的内容，而<code>.git</code>也不会很大，</li> <li>然后就是速度，考虑这样的情况，当我们修改了一个文件的时候，Git会去计算这个文件的<code>SHA-1</code>散列值。<br /> 如果该散列值所得到的路径已经存在，那就说明，这个文件并没有被真正修改（也可以是改了然后又改了回来），这时就不会在本地版本库中存储新的对象。也就是说<code>blob</code>对象跟文件名一点关系都没有，两个不同名字的文件，只要他们的内容相同，在Git的眼里他就是一个<code>blob</code>对象，且只有一份。<br /> 如果我们真正的修改了一个文件，那么Git会计算这个文件的散列值，然后将这个文件压缩存储在<code>objects</code>目录中。<br /> 这样设计的可以大大的节约存储的空间，也提升了Git的存储速度。</li> <li>如果我们需要进行一次提交操作，是先对原来的文件进行更改，然后需要创建一个相应的树结构，来记录这些文件的变化。也就是每一次提交都创建一个顶层树对象来表示这次提交快照。<br /> Git会对比前一个提交的顶层树对象，然后将没有改变的树对象或数据对象直接复制到新创建的这个顶层树对象中，将改变的树对象或数据对象，进行覆盖，最后再提交到本地版本库。</li> </ul> <blockquote> <p>所以说决定你仓库大小的并不是完全在于每个文件的大小，而是你修改提交的次数，修改的次数越多，产生的树对象、数据对象和提交对象也就越多。</p> </blockquote> <blockquote> <p>参考：<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://blog.csdn.net/songyunzu/article/details/92023816"  target="_blank" rel="nofollow">https://blog.csdn.net/songyunzu/article/details/92023816</a></p> </blockquote> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-55596.htm">被猫抓伤破皮要打针吗超过24小时（被猫抓伤几小时内打针有效）</a></p>
                                        <p>下一个：<a href="/news/article-56154.htm">新手养猫十大误区（新手养猫十大误区是什么）</a></p>
                                    </div>
                                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="panel panel-default">
    <div class="panel-heading">
        <h2 class="panel-title">热门文章</h2>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/free-nodes/2024-12-28-clash-node.htm" title="「12月28日」2024年最新高速V2ray/SSR/Shadowrocket/Clash免费节点订阅链接地址分享">「12月28日」2024年最新高速V2ray/SSR/Shadowrocket/Clash免费节点订阅链接地址分享</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-1-23-shadowrocket-node.htm" title="「1月23日」2025年最新高速Clash/V2ray/SSR/Shadowrocket免费节点订阅链接地址分享">「1月23日」2025年最新高速Clash/V2ray/SSR/Shadowrocket免费节点订阅链接地址分享</a></li>
                        <li class="py-2"><a href="/news/article-36362.htm" title="通过实例程序验证与优化谈谈网上很多对于Java DCL的一些误解以及为何要理解Java内存模型">通过实例程序验证与优化谈谈网上很多对于Java DCL的一些误解以及为何要理解Java内存模型</a></li>
                        <li class="py-2"><a href="/news/article-30165.htm" title="分享C++三种类型new类型的运算符使用详情_C 语言_">分享C++三种类型new类型的运算符使用详情_C 语言_</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-12-8-free-v2ray.htm" title="「12月8日」2024年最新高速SSR/Shadowrocket/V2ray/Clash免费节点订阅链接">「12月8日」2024年最新高速SSR/Shadowrocket/V2ray/Clash免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-11-29-free-subscribe-node.htm" title="「11月29日」2024年最新高速Shadowrocket/Clash/V2ray/SSR免费节点订阅链接">「11月29日」2024年最新高速Shadowrocket/Clash/V2ray/SSR免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/news/article-46739.htm" title="树的同构 Java">树的同构 Java</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-1-26-free-ssr-node.htm" title="「1月26日」2025年最新高速SSR/V2ray/Clash/Shadowrocket免费节点订阅链接地址分享">「1月26日」2025年最新高速SSR/V2ray/Clash/Shadowrocket免费节点订阅链接地址分享</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-1-12-clash-v2ray-ss-ssr.htm" title="「1月12日」2025年最新高速Shadowrocket/V2ray/Clash/SSR免费节点订阅链接地址分享">「1月12日」2025年最新高速Shadowrocket/V2ray/Clash/SSR免费节点订阅链接地址分享</a></li>
                        <li class="py-2"><a href="/news/article-26901.htm" title="吉泰生物怎么样 吉泰生物怎么样知乎">吉泰生物怎么样 吉泰生物怎么样知乎</a></li>
                    </ul>
    </div>
</div>


<div class="panel panel-default">
    <div class="panel-heading">
        <h2 class="panel-title">归纳</h2>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <span class="badge" style="float: right;">42</span>
                <h4><a href="/date/2025-02/" title="2025-02 归档">2025-02</a></h4>
            </li>
                        <li class="py-2">
                <span class="badge" style="float: right;">92</span>
                <h4><a href="/date/2025-01/" title="2025-01 归档">2025-01</a></h4>
            </li>
                        <li class="py-2">
                <span class="badge" style="float: right;">93</span>
                <h4><a href="/date/2024-12/" title="2024-12 归档">2024-12</a></h4>
            </li>
                        <li class="py-2">
                <span class="badge" style="float: right;">30</span>
                <h4><a href="/date/2024-11/" title="2024-11 归档">2024-11</a></h4>
            </li>
                    </ul>
    </div>
</div>


                        </div>
                    </div>
                </div>
            </div>
        </section>
                <footer>
            <div class="container">
                <div class="row">
                            <p>
                                <a href="/">首页</a> | 
                                <a href="/free-node/">免费节点</a> | 
                                <a href="/news/">新闻资讯</a> |
                                <a href="/about-us.htm">关于我们</a> |
                                <a href="/disclaimer.htm">免责申明</a> |
                                <a href="/privacy.htm">隐私申明</a> |
                                <a href="/sitemap.xml">网站地图</a>
                            </p>
                    <p>ClashNodeShare官方节点分享站 版权所有</p>
                    <p>Powered by WordPress</p>
                </div>
            </div>

        </footer>
    </div>
    <a href="#" class="scrollup"><i class="fa fa-angle-up active"></i></a>
    <!-- javascript
    ================================================== -->
    <!-- Placed at the end of the document so the pages load faster -->
    <script src="/assets/website/js/frontend/clashnodeshare/jquery.js"></script>
    <script src="/assets/website/js/frontend/clashnodeshare/jquery.easing.1.3.js"></script>
    <script src="/assets/website/js/frontend/clashnodeshare/bootstrap.min.js"></script>
    <script src="/assets/website/js/frontend/clashnodeshare/jquery.fancybox.pack.js"></script>
    <script src="/assets/website/js/frontend/clashnodeshare/jquery.fancybox-media.js"></script>
    <script src="/assets/website/js/frontend/clashnodeshare/jquery.flexslider.js"></script>
    <script src="/assets/website/js/frontend/clashnodeshare/animate.js"></script>
    <!-- Vendor Scripts -->
    <script src="/assets/website/js/frontend/clashnodeshare/modernizr.custom.js"></script>
    <script src="/assets/website/js/frontend/clashnodeshare/jquery.isotope.min.js"></script>
    <script src="/assets/website/js/frontend/clashnodeshare/jquery.magnific-popup.min.js"></script>
    <script src="/assets/website/js/frontend/clashnodeshare/animate.js"></script>
    <script src="/assets/website/js/frontend/clashnodeshare/custom.js"></script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script><script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>